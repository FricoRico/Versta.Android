import kotlin.String;
import kotlin.collections.List;
import kotlin.collections.Map;

CREATE TABLE LanguageModel (
    languageId TEXT NOT NULL PRIMARY KEY REFERENCES Language(id) ON DELETE CASCADE,
    baseModel TEXT NOT NULL,
    architectures TEXT AS List<String> NOT NULL,
    path TEXT NOT NULL,
    version TEXT NOT NULL
);

getAll:
SELECT * FROM LanguageModel;

getAllByLanguageId:
SELECT * FROM LanguageModel WHERE languageId = :languageId;

getAllByLanguageIds:
SELECT * FROM LanguageModel WHERE languageId IN :languageIds;

upsert {
    UPDATE LanguageModel SET
        architectures = :architectures,
        path = :path,
        version = :version
    WHERE languageId = :languageId AND baseModel = :baseModel;

    INSERT OR IGNORE INTO LanguageModel (
        languageId,
        baseModel,
        architectures,
        path,
        version
    ) VALUES (
        :languageId,
        :baseModel,
        :architectures,
        :path,
        :version
    );
}

deleteById:
DELETE FROM LanguageModel WHERE languageId = :languageId;

removeNotIn:
DELETE FROM LanguageModel WHERE languageId NOT IN :languageIds;